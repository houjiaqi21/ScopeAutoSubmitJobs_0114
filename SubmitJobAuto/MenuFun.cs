// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 15.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace SubmitJobAuto
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WpfControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;


    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public partial class MenuFun
    {

        /// <summary>
        /// RecordedMethod1
        /// </summary>
        public void ClickSubmit()
        {
            #region Variable Declarations
            WpfTreeItem uIScope19scriptTreeItem = this.UIScopAll_In_OneMicrosWindow.UITabGroupST003ae79031TabList.UISolutionExplorerTabPage.UIScope17scriptTreeItem;
            WpfMenuItem uISubmitScriptMenuItem = this.UIWpfWindow.UIItemMenu.UISubmitScriptMenuItem;
            #endregion

            // Right-Click 'Scope17.script' tree item
            Mouse.Click(uIScope19scriptTreeItem, MouseButtons.Right);
            Playback.Wait(1000);
            // Click 'Submit Script' menu item
            Mouse.Click(uISubmitScriptMenuItem);
        }

        #region Properties
        public UIScopAll_In_OneMicrosWindow UIScopAll_In_OneMicrosWindow
        {
            get
            {
                if ((this.mUIScopAll_In_OneMicrosWindow == null))
                {
                    this.mUIScopAll_In_OneMicrosWindow = new UIScopAll_In_OneMicrosWindow();
                }
                return this.mUIScopAll_In_OneMicrosWindow;
            }
        }

        public UIWpfWindow UIWpfWindow
        {
            get
            {
                if ((this.mUIWpfWindow == null))
                {
                    this.mUIWpfWindow = new UIWpfWindow();
                }
                return this.mUIWpfWindow;
            }
        }
        #endregion

        #region Fields
        private UIScopAll_In_OneMicrosWindow mUIScopAll_In_OneMicrosWindow;

        private UIWpfWindow mUIWpfWindow;
        #endregion
    }

    public class UIScopAll_In_OneMicrosWindow : WpfWindow
    {

        public UIScopAll_In_OneMicrosWindow()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "ScopAll_In_One - Microsoft Visual Studio";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("ScopAll_In_One - Microsoft Visual Studio");
            #endregion
        }

        #region Properties
        public UITabGroupST003ae79031TabList UITabGroupST003ae79031TabList
        {
            get
            {
                if ((this.mUITabGroupST003ae79031TabList == null))
                {
                    this.mUITabGroupST003ae79031TabList = new UITabGroupST003ae79031TabList(this);
                }
                return this.mUITabGroupST003ae79031TabList;
            }
        }
        #endregion

        #region Fields
        private UITabGroupST003ae79031TabList mUITabGroupST003ae79031TabList;
        #endregion
    }

    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITabGroupST003ae79031TabList : WpfTabList
    {

        public UITabGroupST003ae79031TabList(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTabList.PropertyNames.AutomationId] = "TabGroup|ST:0:0:{3ae79031-e1bc-11d0-8f78-00a0c9110057}|ST:0:0:{1c64b9c2-e352-428e" +
                "-a56d-0ace190b99a6}";
            this.WindowTitles.Add("ScopAll_In_One - Microsoft Visual Studio");
            #endregion
        }

        #region Properties
        public UISolutionExplorerTabPage UISolutionExplorerTabPage
        {
            get
            {
                if ((this.mUISolutionExplorerTabPage == null))
                {
                    this.mUISolutionExplorerTabPage = new UISolutionExplorerTabPage(this);
                }
                return this.mUISolutionExplorerTabPage;
            }
        }
        #endregion

        #region Fields
        private UISolutionExplorerTabPage mUISolutionExplorerTabPage;
        #endregion
    }

    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISolutionExplorerTabPage : WpfTabPage
    {

        public UISolutionExplorerTabPage(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTabPage.PropertyNames.AutomationId] = "TAB_ST:0:0:{3ae79031-e1bc-11d0-8f78-00a0c9110057}";
            this.WindowTitles.Add("ScopAll_In_One - Microsoft Visual Studio");
            #endregion
        }

        #region Properties
        public WpfTreeItem UIScope17scriptTreeItem
        {
            get
            {
                if ((this.mUIScope17scriptTreeItem == null))
                {
                    this.mUIScope17scriptTreeItem = new WpfTreeItem(this);
                    #region Search Criteria
                    this.mUIScope17scriptTreeItem.SearchProperties[WpfTreeItem.PropertyNames.Name] = "Scope19.script";
                    this.mUIScope17scriptTreeItem.WindowTitles.Add("ScopAll_In_One - Microsoft Visual Studio");
                    #endregion
                }
                return this.mUIScope17scriptTreeItem;
            }
        }
        #endregion

        #region Fields
        private WpfTreeItem mUIScope17scriptTreeItem;
        #endregion
    }

    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIWpfWindow : WpfWindow
    {

        public UIWpfWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            #endregion
        }

        #region Properties
        public UIItemMenu UIItemMenu
        {
            get
            {
                if ((this.mUIItemMenu == null))
                {
                    this.mUIItemMenu = new UIItemMenu(this);
                }
                return this.mUIItemMenu;
            }
        }
        #endregion

        #region Fields
        private UIItemMenu mUIItemMenu;
        #endregion
    }

    public class UIItemMenu : WpfMenu
    {

        public UIItemMenu(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfMenu.PropertyNames.ClassName] = "Uia.ContextMenu";
            this.SearchProperties[WpfMenu.PropertyNames.Name] = "Item";
            #endregion
        }

        #region Properties
        public WpfMenuItem UISubmitScriptMenuItem
        {
            get
            {
                if ((this.mUISubmitScriptMenuItem == null))
                {
                    this.mUISubmitScriptMenuItem = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mUISubmitScriptMenuItem.SearchProperties[WpfMenuItem.PropertyNames.Name] = "Submit Script";
                    #endregion
                }
                return this.mUISubmitScriptMenuItem;
            }
        }
        #endregion

        #region Fields
        private WpfMenuItem mUISubmitScriptMenuItem;
        #endregion
    }
}
